/* tslint:disable */
/* eslint-disable */
/**
 * W3S
 * All W3S APIs
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import { FeeLevel } from './fee-level';
// May contain unused imports in some cases
// @ts-ignore
import { ScpSchemasBlockchain } from './scp-schemas-blockchain';

/**
 * 
 * @export
 * @interface TemplateContractDeploymentRequest
 */
export interface TemplateContractDeploymentRequest {
    /**
     * Universally unique identifier (UUID v4) idempotency key. This key is utilized to ensure exactly-once execution of mutating requests. To create a UUIDv4 go to [uuidgenerator.net](https://www.uuidgenerator.net).
     * @type {string}
     * @memberof TemplateContractDeploymentRequest
     */
    'idempotencyKey': string;
    /**
     * 
     * @type {ScpSchemasBlockchain}
     * @memberof TemplateContractDeploymentRequest
     */
    'blockchain': ScpSchemasBlockchain;
    /**
     * Unique system generated identifier of the wallet. Required when source Address and blockchain is not provided. Mutually exclusive. For contract deploys this wallet ID will be used as the source.
     * @type {string}
     * @memberof TemplateContractDeploymentRequest
     */
    'walletId': string;
    /**
     * Name of the contract in your Circle console.
     * @type {string}
     * @memberof TemplateContractDeploymentRequest
     */
    'name': string;
    /**
     * Description of the contract.
     * @type {string}
     * @memberof TemplateContractDeploymentRequest
     */
    'description'?: string;
    /**
     * A base64 string expression of the entity secret ciphertext. The entity secret should be encrypted by the entity public key. Circle mandates that the entity secret ciphertext is unique for each API request. 
     * @type {string}
     * @memberof TemplateContractDeploymentRequest
     */
    'entitySecretCiphertext': string;
    /**
     * JSON object that contains the template deployment parameters used to initialize the contract(s) on-chain.
     * @type {{ [key: string]: string; }}
     * @memberof TemplateContractDeploymentRequest
     */
    'templateParameters'?: { [key: string]: string; };
    /**
     * 
     * @type {FeeLevel}
     * @memberof TemplateContractDeploymentRequest
     */
    'feeLevel'?: FeeLevel;
    /**
     * The maximum units of gas to be used for the transaction. Required if `feeLevel` is not provided. Estimates for this limit can be obtained through the estimate fee API call. 
     * @type {string}
     * @memberof TemplateContractDeploymentRequest
     */
    'gasLimit'?: string;
    /**
     * For blockchains with EIP-1559 support, the maximum price of gas, in gwei, to be used per each unit of gas (see `gasLimit`). Requires `gasLimit`. Cannot be used with `feeLevel`, `baseFee`, `priorityFee`, or `maxFee`. Estimates for this fee can be obtained through the estimate fee API call. 
     * @type {string}
     * @memberof TemplateContractDeploymentRequest
     */
    'gasPrice'?: string;
    /**
     * The maximum price per unit of gas (see `gasLimit`), in gwei. Requires `baseFee`, `priorityFee`, and `gasLimit` to be present. Cannot be used with `feeLevel` or `gasPrice`. Estimates for this fee can be obtained through the estimate fee API call. 
     * @type {string}
     * @memberof TemplateContractDeploymentRequest
     */
    'maxFee'?: string;
    /**
     * The “tip”, in gwei, to be added to the baseFee as an incentive for validators. Requires `baseFee`, `maxFee`, and `gasLimit` to be present. Cannot be used with `feeLevel` or `gasPrice`. Estimates for this fee can be obtained through the estimate fee API call. 
     * @type {string}
     * @memberof TemplateContractDeploymentRequest
     */
    'priorityFee'?: string;
    /**
     * RefID is a custom label field.
     * @type {string}
     * @memberof TemplateContractDeploymentRequest
     */
    'refId'?: string;
}



